// <auto-generated />
using System;
using FinancialAccountManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialAccountManagement.API.Migrations
{
    [DbContext(typeof(FinancialAccountDbContext))]
    partial class FinancialAccountDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialAccountManagement.API.Model.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountHolder = "Chiaki Kobayashi",
                            AccountNumber = "ACC123",
                            Balance = 1000.00m
                        },
                        new
                        {
                            Id = 2,
                            AccountHolder = "Rie Takahashi",
                            AccountNumber = "ACC456",
                            Balance = 2000.00m
                        },
                        new
                        {
                            Id = 3,
                            AccountHolder = "Yumiri Hanamori",
                            AccountNumber = "ACC789",
                            Balance = 1500.00m
                        },
                        new
                        {
                            Id = 4,
                            AccountHolder = "Makoto Koichi",
                            AccountNumber = "ACC101",
                            Balance = 3000.00m
                        },
                        new
                        {
                            Id = 5,
                            AccountHolder = "Ryōhei Kimura",
                            AccountNumber = "ACC202",
                            Balance = 500.00m
                        });
                });

            modelBuilder.Entity("FinancialAccountManagement.API.Model.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Amount = 500.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5824),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Amount = 200.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5837),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            Amount = 1000.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5839),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 2,
                            Amount = 300.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5841),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            Amount = 700.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5843),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 3,
                            Amount = 100.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5844),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 4,
                            Amount = 2000.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5846),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 4,
                            Amount = 500.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5848),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 5,
                            Amount = 400.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5849),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 5,
                            Amount = 150.00m,
                            TransactionDate = new DateTime(2025, 2, 15, 19, 53, 46, 498, DateTimeKind.Local).AddTicks(5851),
                            TransactionType = "Withdrawal"
                        });
                });

            modelBuilder.Entity("FinancialAccountManagement.API.Model.Domain.Transaction", b =>
                {
                    b.HasOne("FinancialAccountManagement.API.Model.Domain.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FinancialAccountManagement.API.Model.Domain.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
